version: "3"
services:

    web1:
      build: ./simple-route-app
      container_name: web1
      environment:
        - PORT=8080
      ports:
          - "81:8080"

    haproxy:
      build: ./haproxy
      container_name: haproxy
      ports:
        - "80:80"

    rabbitmq-server:
      container_name: rabbitmq-server
      build: ./modules/rabbitmq-server
      environment:
        - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
      ports:
        - "5672:5672"
        - "15672:15672"

    sftp-server:
      container_name: sftp-server
      build: ./modules/sftp-server
      volumes:
        - sftp-upload:/home/$SFTP_USER/upload
      ports:
        - "22:22"
      environment:
        - SFTP_USER=$SFTP_USER
        - QUEUE_ENDPOINT=$QUEUE_ENDPOINT
        - RABBITMQ_SERVER=$RABBITMQ_SERVER
        - RABBITMQ_USER=$RABBITMQ_USER
        - RABBITMQ_PASSWORD=$RABBITMQ_PASSWORD
#      command: $SFTP_USER:$SFTP_PASSWORD:1001
      depends_on:
        - rabbitmq-server

    products-service:
      build: ./modules/products
      container_name: products-service
      environment:
        - PORT=80
        - DATABASE_URL=file:./../sqlite/products.db
        - SFTP_URL=$SFTP_URL
        - SFTP_USERNAME=$SFTP_USER
        - SFTP_PASSWORD=$SFTP_PASSWORD
        - RABBITMQ_SERVER=$RABBITMQ_SERVER
        - RABBITMQ_USER=$RABBITMQ_USER
        - RABBITMQ_PASSWORD=$RABBITMQ_PASSWORD

      ports:
        - "85:8085"
      restart: on-failure #find a better solution for timing the docker image
      depends_on:
        - sftp-server
        - rabbitmq-server

    user-service:
      build:
        context: ./modules/user-service
        target: production

      ports:
        - 3000:3000
volumes:
  sftp-upload:


