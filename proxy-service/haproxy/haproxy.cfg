global 
  maxconn 1024
  lua-load /usr/local/etc/haproxy/authorization.lua

frontend api_gateway
  bind *:8000
  mode http
  timeout client 60s

  acl auth path_beg -i /auth

  use_backend auth_service if auth
  http-request set-var(txn.authorization) req.hdr(Authorization)
  http-request lua.authorize
  # http-request lua.decodeJwt
  # http-request add-header Authorization "Bearer {{ .env.JWT_TOKEN }}"

backend auth_service
  balance roundrobin
  mode http
  http-request replace-path /auth(/)?(.*) /\2
  # http-request deny unless { var(txn.token) -m str token ) } #correct syntax
  http-request deny unless { var(txn.authorized) -m bool } 
  server auth auth-service:4500 check

# backend user_service
  #balance roudrobin / leastconn
  #mode http
  #server user1 user.domain.com:1000 check
  #server user2 user.domain.com:2000 check

# the 2 services below - only for testing purposes

# backend example_service
#   mode http
#   http-request replace-path /ex(/)?(.*) /\2
#   server s1 example-service:1111 check

# backend firewall_service
#   mode http
#   http-request replace-path /service(/)?(.*) /\2
#   http-request deny unless { req.hdr(Authorization) -m found }
#   server s2 nodeapp2:2222 check
