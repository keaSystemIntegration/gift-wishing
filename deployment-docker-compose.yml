version: '3.4'
services:
  lb:
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    image: giftwishingwe.azurecr.io/haproxy
    build: ./haproxy
    ports:
      - '80:80'
    restart: on-failure


  rabbitmq-server:
      image: giftwishingwe.azurecr.io/rabbitmq-server
      container_name: rabbitmq-server
      deploy:
        resources:
          limits:
            cpus: "0.50"
            memory: "512M"
      build: ./modules/rabbitmq-server
      environment:
        - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf

  sftp-service:
    image: giftwishingwe.azurecr.io/sftp-service
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    ports:
      - "22:22"
    container_name: sftp-service
    build:
      context: ./modules/sftp-service
      dockerfile: ./Dockerfile
      args:
        - SFTP_SERVICE_USERNAME=$SFTP_SERVICE_USERNAME
        - SFTP_SERVICE_PASSWORD=$SFTP_SERVICE_PASSWORD
    volumes:
      - sftp-upload:/home/$SFTP_SERVICE_USERNAME/upload
    environment:
      - SFTP_SERVICE_USERNAME=$SFTP_SERVICE_USERNAME
      - RABBITMQ_SERVICE_HOST=$RABBITMQ_SERVICE_HOST
      - RABBITMQ_SERVICE_USER=$RABBITMQ_SERVICE_USER
      - RABBITMQ_SERVICE_PASSWORD=$RABBITMQ_SERVICE_PASSWORD
    depends_on:
      - rabbitmq-server

  products-service:
    image: giftwishingwe.azurecr.io/products-service
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    build: ./modules/products-service
    container_name: products-service
    ports:
      - "8005:8005"
    environment:
      - PORT=8005
      - DATABASE_URL=file:./../sqlite/products.db
      - SFTP_SERVICE_URL=$SFTP_SERVICE_URL
      - SFTP_SERVICE_USERNAME=$SFTP_SERVICE_USERNAME
      - SFTP_SERVICE_PASSWORD=$SFTP_SERVICE_PASSWORD
      - RABBITMQ_SERVICE_HOST=$RABBITMQ_SERVICE_HOST
      - RABBITMQ_SERVICE_USER=$RABBITMQ_SERVICE_USER
      - RABBITMQ_SERVICE_PASSWORD=$RABBITMQ_SERVICE_PASSWORD
    restart: on-failure #TODO: find a better solution for timing the docker image
    depends_on:
      - sftp-service
      - rabbitmq-server

  user-service:
    image: giftwishingwe.azurecr.io/user-service
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    build:
      context: ./modules/user-service
      target: production
    environment:
      - NODE_ENV=production
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - USER_SERVICE_NEO4J_URL=${USER_SERVICE_NEO4J_URL}
      - USER_SERVICE_NEO4J_USERNAME=${USER_SERVICE_NEO4J_USERNAME}
      - USER_SERVICE_NEO4J_PASSWORD=${USER_SERVICE_NEO4J_PASSWORD}
      - USER_SERVICE_AURA_INSTANCENAME=${USER_SERVICE_AURA_INSTANCENAME}
      - USER_SERVICE_JWT_SECRET=${USER_SERVICE_JWT_SECRET}
      - USER_SERVICE_SIGNUP_URL=${USER_SERVICE_SIGNUP_URL}
      - EMAIL_SERVER_URL_LOCAL=${EMAIL_SERVER_URL_LOCAL}
      - EMAIL_SERVER_URL_PROD=${EMAIL_SERVER_URL_PROD}
      - EMAIL_SERVER_ACCESS_TOKEN=${EMAIL_SERVER_ACCESS_TOKEN}
      - EMAIL_SERVER_SENDER_EMAIL=${EMAIL_SERVER_SENDER_EMAIL}
      - EMAIL_SERVER_SENDER_PASSWORD=${EMAIL_SERVER_SENDER_PASSWORD}

  auth-service:
    image: giftwishingwe.azurecr.io/auth-service
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"
    build: ./modules/auth-service
    environment:
      - APPID=4500
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - JWT_SECRET=${JWT_SECRET}


volumes:
    sftp-upload:
        driver: azure_file
        driver_opts:
            share_name: sftp-upload
            storage_account_name: giftwishingstoragewe
            remotepath: home
